eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9vcGVuamRrODp2MS4xLjAKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSAuL2dyYWRsZXcgYnVpbGQKICAgIHdoZW46CiAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3QsIHRhZ10KICAKICBkb2NrZXItYnVpbGQ6CiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgcHR0Zy1pcC1zdHViIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogW21hc3RlciwgcmVmcy90YWdzLypdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICB0YWctbGF0ZXN0LWRvY2tlci1pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1zdHViIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLXN0dWI6bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHRhZyBwdHRnLWlwLXN0dWIgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtc3R1YjpidWlsZC0ke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1pcC1zdHViOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLXN0dWI6YnVpbGQtJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKICB0YWctZG9ja2VyLWltYWdlLXdpdGgtZ2l0LXRhZzoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1zdHViIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLXN0dWI6JHtEUk9ORV9UQUd9LSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLXN0dWI6JHtEUk9ORV9UQUd9LSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwoKICBnZXQta3ViZS1jb25maWd1cmF0aW9uOgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9VS0hvbWVPZmZpY2Uva3ViZS1wdHRnLWlwLXN0dWIuZ2l0CiAgICB3aGVuOgogICAgICBicmFuY2g6IFttYXN0ZXJdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICBnZXQta3ViZS1jb25maWd1cmF0aW9uLWRlcGxveW1lbnQ6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL1VLSG9tZU9mZmljZS9rdWJlLXB0dGctaXAtc3R1Yi5naXQKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CgogIGRlcGxveS10by1kZXYtZnJvbS1idWlsZC1udW1iZXI6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLWRldgogICAgICAtIEVOVklST05NRU5UPWRldgogICAgICAtIFZFUlNJT049YnVpbGQtJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIC0gS1VCRV9TRVJWRVJfREVWPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1pcC1zdHViCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGJyYW5jaDogZGV2ZWxvcG1lbnQKICAgICAgZXZlbnQ6IHB1c2gKCiAgZGVwbG95OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9cHQtaS0ke0RST05FX0RFUExPWV9UT30KICAgICAgLSBFTlZJUk9OTUVOVD0ke0RST05FX0RFUExPWV9UT30KICAgICAgLSBWRVJTSU9OPSR7SU1BR0VfVkVSU0lPTn0KICAgICAgLSBLVUJFX1NFUlZFUl9ERVY9aHR0cHM6Ly9rdWJlLWRldi5kc3Aubm90cHJvZC5ob21lb2ZmaWNlLmdvdi51awogICAgY29tbWFuZHM6CiAgICAgIC0gZW52CiAgICAgIC0gY2Qga3ViZS1wdHRnLWlwLXN0dWIKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IGRlcGxveW1lbnQKICAKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSI.ubKyS8B36t2pQ4n6iLDiz70bLiZ5aiFmv13rmdTfTe0